services:

  # https://github.com/bastienwirtz/homer
  homer:
    image: b4bz/homer
    container_name: homer
    volumes:
      - ./config/homar:/www/assets # Make sure your local config directory exists
    ports:
      - 4444:8080
    environment:
      - INIT_ASSETS=1 # default, requires the config directory to be writable for the container user (see user option)
    restart: unless-stopped

  # https://hub.docker.com/r/linuxserver/qbittorrent
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./container_data/qbittorrent/appdata:/config
      - ~/media:/downloads/media
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

  # https://jellyfin.org/docs/general/installation/container
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    network_mode: 'host'
    volumes:
      - ./container_data/jellyfin/config:/config
      - ./container_data/jellyfin/cache:/cache
      - ~/media:/media
    restart: 'unless-stopped'

  # https://github.com/mishankov/web-tail
  web-tail:
    image: ghcr.io/mishankov/web-tail:main
    container_name: web-tail
    ports:
      - 4443:4443
    environment:
      - ASSETS=/app/dist/public
    volumes:
      - /var/log:/logs/system
      - ./config/web-tail/web-tail.config.toml:/app/web-tail.config.toml
    restart: 'unless-stopped'

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: root
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./container_data/prometheus:/prometheus:rw
    restart: unless-stopped
    depends_on:
      - node_exporter

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
     - '3000:3000'
    depends_on:
      - prometheus
